{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","step","frameSize","itemWidth","animationDuration","currentItemIndex","infinite","handleImagesNext","newPosition","props","images","length","setState","handleImagesPrev","changeStep","e","target","value","changeFrameSize","changeItemWidth","changeAnimationDuration","changeInfinite","prevState","this","position","className","style","width","transform","marginLeft","transition","map","image","src","alt","type","onClick","htmlFor","id","min","max","onChange","checked","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"uPAgBMA,E,4MACJC,MAAe,CACbC,KAAM,EACNC,UAAW,EACXC,UAAW,IACXC,kBAAmB,IACnBC,iBAAkB,EAClBC,UAAU,G,EAGZC,iBAAmB,WACjB,MAKI,EAAKP,MAJPC,EADF,EACEA,KACAC,EAFF,EAEEA,UACAI,EAHF,EAGEA,SAIEE,EAPJ,EAIEH,iBAG2BJ,EAEzBK,EACEE,IAAgB,EAAKC,MAAMC,OAAOC,SACpCH,EAAc,GAEPA,IAAgB,EAAKC,MAAMC,OAAOC,OAAST,IACpDM,GAAe,EAAKC,MAAMC,OAAOC,OAAST,GAG5C,EAAKU,SAAS,CAAEP,iBAAkBG,K,EAGpCK,iBAAmB,WACjB,MAII,EAAKb,MAHPC,EADF,EACEA,KAKEO,EANJ,EAEEH,iBAI2BJ,EAN7B,EAGEK,SAMIE,EAAc,IAChBA,GAAe,EAAKC,MAAMC,OAAOC,OAAS,EAAKX,MAAME,WAE9CM,EAAc,EACvBA,EAAc,EACLA,EAAc,EAAKC,MAAMC,OAAOC,OAAS,EAAKX,MAAME,YAC7DM,EAAc,EAAKC,MAAMC,OAAOC,OAAS,EAAKX,MAAME,WAGtD,EAAKU,SAAS,CAAEP,iBAAkBG,K,EAGpCM,WAAa,SAACC,GACZ,EAAKH,SAAS,CAAEX,MAAOc,EAAEC,OAAOC,S,EAGlCC,gBAAkB,SAACH,GACjB,EAAKH,SAAS,CAAEV,WAAYa,EAAEC,OAAOC,S,EAGvCE,gBAAkB,SAACJ,GACjB,EAAKH,SAAS,CAAET,WAAYY,EAAEC,OAAOC,S,EAGvCG,wBAA0B,SAACL,GACzB,EAAKH,SAAS,CAAER,mBAAoBW,EAAEC,OAAOC,S,EAG/CI,eAAiB,WACf,EAAKT,UAAS,SAACU,GAAD,MAAgB,CAAEhB,UAAWgB,EAAUhB,c,4CAGvD,WAAU,IAAD,OACCI,EAAWa,KAAKd,MAAhBC,OAER,EAOIa,KAAKvB,MANPC,EADF,EACEA,KACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,kBACAE,EALF,EAKEA,SACkBkB,EANpB,EAMEnB,iBAGF,OACE,sBAAKoB,UAAU,WAAf,UACE,qBACEA,UAAU,mBACVC,MAAO,CACLC,MAAM,GAAD,OAAKzB,EAAYC,EAAjB,OAHT,SAME,oBACEsB,UAAU,iBACVC,MAAO,CACLE,UAAU,cAAD,OAAgBJ,EAAhB,OACTK,WAAW,GAAD,OAAKL,EAAWrB,EAAhB,MACV2B,WAAW,GAAD,OAAK1B,EAAL,MACVuB,MAAM,GAAD,OAAKzB,EAAYC,EAAjB,OANT,SASGO,EAAOqB,KAAI,SAACC,GAAD,OACV,oBAAgBP,UAAU,iBAA1B,SACE,qBACEQ,IAAKD,EACLE,IAAI,QACJP,MAAOxB,KAJH,gBAWd,wBACEgC,KAAK,SACLV,UAAU,SACVW,QAAS,WACP,EAAKvB,oBAJT,kBAUA,wBACEsB,KAAK,SACLV,UAAU,SACVW,QAAS,WACP,EAAK7B,oBAJT,kBAUA,sBAAKkB,UAAU,SAAf,UACE,wBACEY,QAAQ,SACRZ,UAAU,QAFZ,kBAKE,uBACEU,KAAK,SACLG,GAAG,SACHb,UAAU,QACVc,IAAK,EACLC,IAAK,GACLvB,MAAOhB,EACPwC,SAAUlB,KAAKT,gBAGnB,wBACEuB,QAAQ,UACRZ,UAAU,QAFZ,wBAKE,uBACEU,KAAK,SACLG,GAAG,UACHb,UAAU,QACVc,IAAK,EACLC,IAAK,GACLvB,MAAOf,EACPuC,SAAUlB,KAAKL,qBAInB,wBACEmB,QAAQ,SACRZ,UAAU,QAFZ,wBAKE,uBACEU,KAAK,SACLG,GAAG,SACHb,UAAU,QACVe,IAAK,IACLvB,MAAOd,EACPsC,SAAUlB,KAAKJ,qBAInB,wBACEkB,QAAQ,SACRZ,UAAU,QAFZ,gCAKE,uBACEU,KAAK,SACLG,GAAG,SACHb,UAAU,QACVR,MAAOb,EACPqC,SAAUlB,KAAKH,6BAInB,wBACEiB,QAAQ,SACRZ,UAAU,QAFZ,sBAKE,uBACEU,KAAK,WACLG,GAAG,SACHb,UAAU,QACViB,QAASpC,EACTmC,SAAUlB,KAAKF,8B,GA7MNsB,IAAMC,WAsNd7C,IC7NT8C,E,4MACJ7C,MAAQ,CACNU,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAGFJ,UAAU,G,4CAGZ,WACE,IACEI,EAEEa,KAAKvB,MAFPU,OAIF,OACE,sBAAKe,UAAU,MAAf,UACE,2CAEA,cAAC,EAAD,CACEf,OAAQA,W,GA7BAiC,IAAMC,WAoCTC,IC1CfC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4c658e95.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n};\n\ntype State = {\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  currentItemIndex: number;\n  infinite: boolean;\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state: State = {\n    step: 0,\n    frameSize: 0,\n    itemWidth: 130,\n    animationDuration: 1000,\n    currentItemIndex: 0,\n    infinite: false,\n  };\n\n  handleImagesNext = () => {\n    const {\n      step,\n      frameSize,\n      infinite,\n      currentItemIndex: position,\n    } = this.state;\n\n    let newPosition = position - step;\n\n    if (infinite) {\n      if (newPosition <= -this.props.images.length) {\n        newPosition = 0;\n      }\n    } else if (newPosition <= -this.props.images.length + frameSize) {\n      newPosition = -this.props.images.length + frameSize;\n    }\n\n    this.setState({ currentItemIndex: newPosition });\n  };\n\n  handleImagesPrev = () => {\n    const {\n      step,\n      currentItemIndex: position,\n      infinite,\n    } = this.state;\n\n    let newPosition = position + step;\n\n    if (infinite) {\n      if (newPosition > 0) {\n        newPosition = -this.props.images.length + this.state.frameSize;\n      }\n    } else if (newPosition > 0) {\n      newPosition = 0;\n    } else if (newPosition > this.props.images.length - this.state.frameSize) {\n      newPosition = this.props.images.length - this.state.frameSize;\n    }\n\n    this.setState({ currentItemIndex: newPosition });\n  };\n\n  changeStep = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +e.target.value });\n  };\n\n  changeFrameSize = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +e.target.value });\n  };\n\n  changeItemWidth = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +e.target.value });\n  };\n\n  changeAnimationDuration = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +e.target.value });\n  };\n\n  changeInfinite = () => {\n    this.setState((prevState) => ({ infinite: !prevState.infinite }));\n  };\n\n  render() {\n    const { images } = this.props;\n\n    const {\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n      currentItemIndex: position,\n    } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel_wrapper\"\n          style={{\n            width: `${frameSize * itemWidth}px`,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${position}px)`,\n              marginLeft: `${position * itemWidth}px`,\n              transition: `${animationDuration}ms`,\n              width: `${frameSize * itemWidth}px`,\n            }}\n          >\n            {images.map((image) => (\n              <li key=\"image\" className=\"Carousel__item\">\n                <img\n                  src={image}\n                  alt=\"Smile\"\n                  width={itemWidth}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            this.handleImagesPrev();\n          }}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            this.handleImagesNext();\n          }}\n        >\n          Next\n        </button>\n\n        <div className=\"labels\">\n          <label\n            htmlFor=\"stepId\"\n            className=\"label\"\n          >\n            Step:\n            <input\n              type=\"number\"\n              id=\"stepId\"\n              className=\"input\"\n              min={1}\n              max={10}\n              value={step}\n              onChange={this.changeStep}\n            />\n          </label>\n          <label\n            htmlFor=\"frameId\"\n            className=\"label\"\n          >\n            Frame size:\n            <input\n              type=\"number\"\n              id=\"frameId\"\n              className=\"input\"\n              min={1}\n              max={10}\n              value={frameSize}\n              onChange={this.changeFrameSize}\n            />\n          </label>\n\n          <label\n            htmlFor=\"itemId\"\n            className=\"label\"\n          >\n            Item width:\n            <input\n              type=\"number\"\n              id=\"itemId\"\n              className=\"input\"\n              max={390}\n              value={itemWidth}\n              onChange={this.changeItemWidth}\n            />\n          </label>\n\n          <label\n            htmlFor=\"animId\"\n            className=\"label\"\n          >\n            Animation Duration:\n            <input\n              type=\"number\"\n              id=\"animId\"\n              className=\"input\"\n              value={animationDuration}\n              onChange={this.changeAnimationDuration}\n            />\n          </label>\n\n          <label\n            htmlFor=\"itemId\"\n            className=\"label\"\n          >\n            Infinite:\n            <input\n              type=\"checkbox\"\n              id=\"itemId\"\n              className=\"input\"\n              checked={infinite}\n              onChange={this.changeInfinite}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[],\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    // eslint-disable-next-line react/no-unused-state\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Carousel </h1>\n\n        <Carousel\n          images={images}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}